(self.webpackChunksuperbench_website=self.webpackChunksuperbench_website||[]).push([[1790],{3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return o},kt:function(){return k}});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,o=m(t,["components","mdxType","originalType","parentName"]),s=p(a),k=l,N=s["".concat(d,".").concat(k)]||s[k]||u[k]||r;return a?n.createElement(N,i(i({ref:e},o),{},{components:a})):n.createElement(N,i({ref:e},o))}));function k(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=s;var m={};for(var d in e)hasOwnProperty.call(e,d)&&(m[d]=e[d]);m.originalType=t,m.mdxType="string"==typeof t?t:l,i[1]=m;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},3839:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return m},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return o},default:function(){return s}});var n=a(2122),l=a(9756),r=(a(7294),a(3905)),i=["components"],m={id:"cli"},d="CLI",p={unversionedId:"cli",id:"cli",isDocsHomePage:!1,title:"CLI",description:"SuperBench provides a command line interface to help you use, deploy and run benchmarks.",source:"@site/../docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/superbenchmark/docs/cli",editUrl:"https://github.com/microsoft/superbenchmark/edit/main/website/../docs/cli.md",version:"current",frontMatter:{id:"cli"},sidebar:"api",next:{title:"SuperBench Config File",permalink:"/superbenchmark/docs/superbench-config"}},o=[{value:"SuperBench CLI commands",id:"superbench-cli-commands",children:[{value:"<code>sb benchmark list</code>",id:"sb-benchmark-list",children:[]},{value:"<code>sb benchmark list-parameters</code>",id:"sb-benchmark-list-parameters",children:[]},{value:"<code>sb deploy</code>",id:"sb-deploy",children:[]},{value:"<code>sb exec</code>",id:"sb-exec",children:[]},{value:"<code>sb result diagnosis</code>",id:"sb-result-diagnosis",children:[]},{value:"<code>sb result summary</code>",id:"sb-result-summary",children:[]},{value:"<code>sb run</code>",id:"sb-run",children:[]},{value:"<code>sb version</code>",id:"sb-version",children:[]}]}],u={toc:o};function s(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cli"},"CLI"),(0,r.kt)("p",null,"SuperBench provides a command line interface to help you use, deploy and run benchmarks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sb\n\n   _____                       ____                  _\n  / ____|                     |  _ \\                | |\n | (___  _   _ _ __   ___ _ __| |_) | ___ _ __   ___| |__\n  \\___ \\| | | | '_ \\ / _ \\ '__|  _ < / _ \\ '_ \\ / __| '_ \\\n  ____) | |_| | |_) |  __/ |  | |_) |  __/ | | | (__| | | |\n |_____/ \\__,_| .__/ \\___|_|  |____/ \\___|_| |_|\\___|_| |_|\n              | |\n              |_|\n\nWelcome to the SB CLI!\n")),(0,r.kt)("h2",{id:"superbench-cli-commands"},"SuperBench CLI commands"),(0,r.kt)("p",null,"The following lists ",(0,r.kt)("inlineCode",{parentName:"p"},"sb")," commands usages and examples:"),(0,r.kt)("h3",{id:"sb-benchmark-list"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb benchmark list")),(0,r.kt)("p",null,"List benchmarks which match the regular expression."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list [--name]\n")),(0,r.kt)("h4",{id:"optional-arguments"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-n")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Benchmark name or regular expression.")))),(0,r.kt)("h4",{id:"global-arguments"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"List all benchmarks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list\n")),(0,r.kt)("p",null,'List all benchmarks ending with "-bw":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list --name [a-z]+-bw\n")),(0,r.kt)("h3",{id:"sb-benchmark-list-parameters"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb benchmark list-parameters")),(0,r.kt)("p",null,"List parameters for benchmarks which match the regular expression."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list-parameters [--name]\n")),(0,r.kt)("h4",{id:"optional-arguments-1"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-n")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Benchmark name or regular expression.")))),(0,r.kt)("h4",{id:"global-arguments-1"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-1"},"Examples"),(0,r.kt)("p",null,"List parameters for all benchmarks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list-parameters\n")),(0,r.kt)("p",null,'List parameters for all benchmarks which starts with "pytorch-":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb benchmark list-parameters --name pytorch-[a-z]+\n")),(0,r.kt)("h3",{id:"sb-deploy"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb deploy")),(0,r.kt)("p",null,"Deploy the SuperBench environments to all managed nodes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb deploy [--docker-image]\n          [--docker-password]\n          [--docker-username]\n          [--host-file]\n          [--host-list]\n          [--host-password]\n          [--host-username]\n          [--output-dir]\n          [--private-key]\n")),(0,r.kt)("h4",{id:"optional-arguments-2"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-image")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-i")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"superbench/superbench")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker image URI, ",(0,r.kt)("a",{parentName:"td",href:"/superbenchmark/docs/user-tutorial/container-images"},"here")," listed all images.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-password")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker registry password if authentication is needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-username")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker registry username if authentication is needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to Ansible inventory host file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-list")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-l")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated host list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-password")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Host password or key passphase if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-username")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Host username if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to output directory, outputs/{datetime} will be used if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--private-key")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to private key if needed.")))),(0,r.kt)("h4",{id:"global-arguments-2"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-2"},"Examples"),(0,r.kt)("p",null,"Deploy default image on local GPU node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb deploy --host-list localhost\n")),(0,r.kt)("p",null,"Deploy image ",(0,r.kt)("inlineCode",{parentName:"p"},"superbench/cuda:11.1")," to all nodes in ",(0,r.kt)("inlineCode",{parentName:"p"},"./host.ini"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb deploy --docker-image superbench/cuda:11.1 --host-file ./host.ini\n")),(0,r.kt)("h3",{id:"sb-exec"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb exec")),(0,r.kt)("p",null,"Execute the SuperBench benchmarks locally."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb exec [--config-file]\n        [--config-override]\n        [--output-dir]\n")),(0,r.kt)("h4",{id:"optional-arguments-3"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--config-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-c")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to SuperBench config file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--config-override")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-C")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra arguments to override config_file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to output directory, outputs/{datetime} will be used if not specified.")))),(0,r.kt)("h4",{id:"global-arguments-3"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-3"},"Examples"),(0,r.kt)("p",null,"Execute GPT2 model benchmark in default configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb exec --config-override superbench.enable=\"['gpt2_models']\"\n")),(0,r.kt)("h3",{id:"sb-result-diagnosis"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb result diagnosis")),(0,r.kt)("p",null,"Filter the defective machines automatically from benchmarking results according to rules defined in rule file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result diagnosis --baseline-file\n                    --data-file\n                    --rule-file\n                    [--decimal-place-value]\n                    [--rule-file]\n                    [--output-all]\n                    [--output-dir]\n                    [--output-file-format {excel, json, md, html}]\n")),(0,r.kt)("h4",{id:"required-arguments"},"Required arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--baseline-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-b")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to baseline file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--data-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-d")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to raw data file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--rule-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-r")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to rule file.")))),(0,r.kt)("h4",{id:"optional-arguments-4"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--decimal-place-value")),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of valid decimal places to show in output. Default: 2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-all")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Output diagnosis results for all nodes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to output directory, outputs/{datetime} will be used if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-file-format")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"excel")),(0,r.kt)("td",{parentName:"tr",align:null},"Format of output file, 'excel', 'json', 'md' or 'html'. Default: excel.")))),(0,r.kt)("h4",{id:"global-arguments-4"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-4"},"Examples"),(0,r.kt)("p",null,"Run data diagnosis and output the results in excel format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result diagnosis --data-file outputs/results-summary.jsonl --rule-file rule.yaml --baseline-file baseline.json --output-file-format excel\n")),(0,r.kt)("p",null,"Run data diagnosis and output the results in jsonl format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result diagnosis --data-file outputs/results-summary.jsonl --rule-file rule.yaml --baseline-file baseline.json --output-file-format json\n")),(0,r.kt)("p",null,"Run data diagnosis and output the results in markdown format with 2 valid decimal places:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result diagnosis --data-file outputs/results-summary.jsonl --rule-file rule.yaml --baseline-file baseline.json --output-file-format md --decimal-place-value 2\n")),(0,r.kt)("p",null,"run data diagnosis and output the results of all nodes in json format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result diagnosis --data-file outputs/results-summary.jsonl --rule-file rule.yaml --baseline-file baseline.json --output-file-format json --output-all\n")),(0,r.kt)("h3",{id:"sb-result-summary"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb result summary")),(0,r.kt)("p",null,"Generate the readable summary report automatically from benchmarking results according to rules defined in rule file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result summary --data-file\n                  --rule-file\n                  [--decimal-place-value]\n                  [--output-dir]\n                  [--output-file-format {md, excel, html}]\n")),(0,r.kt)("h4",{id:"required-arguments-1"},"Required arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--data-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-d")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to raw data file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--rule-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-r")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to rule file.")))),(0,r.kt)("h4",{id:"optional-arguments-5"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--decimal-place-value")),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of valid decimal places to show in output. Default: 2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to output directory, outputs/{datetime} will be used if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-file-format")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"md")),(0,r.kt)("td",{parentName:"tr",align:null},"Format of output file, 'excel', 'md' or 'html'. Default: md.")))),(0,r.kt)("h4",{id:"global-arguments-5"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-5"},"Examples"),(0,r.kt)("p",null,"Run result summary and output the results in markdown format with 2 valid decimal places:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result summary --data-file outputs/results-summary.jsonl --rule-file rule.yaml --output-file-format md --decimal-place-value 2\n")),(0,r.kt)("p",null,"Run result summary and output the results in html format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb result summary --data-file outputs/results-summary.jsonl --rule-file rule.yaml --output-file-format html\n")),(0,r.kt)("h3",{id:"sb-run"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb run")),(0,r.kt)("p",null,"Run the SuperBench benchmarks distributedly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb run [--config-file]\n       [--config-override]\n       [--docker-image]\n       [--docker-password]\n       [--docker-username]\n       [--host-file]\n       [--host-list]\n       [--host-password]\n       [--host-username]\n       [--output-dir]\n       [--private-key]\n")),(0,r.kt)("h4",{id:"optional-arguments-6"},"Optional arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--config-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-c")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to SuperBench config file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--config-override")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-C")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra arguments to override config_file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-image")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-i")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"superbench/superbench")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker image URI.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-password")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker registry password if authentication is needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--docker-username")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Docker registry username if authentication is needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-file")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to Ansible inventory host file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-list")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-l")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated host list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-password")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Host password or key passphase if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--host-username")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Host username if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to output directory, outputs/{datetime} will be used if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--private-key")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to private key if needed.")))),(0,r.kt)("h4",{id:"global-arguments-6"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-6"},"Examples"),(0,r.kt)("p",null,"Run all benchmarks on local GPU node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb run --host-list localhost\n")),(0,r.kt)("p",null,"Run all benchmarks on all managed nodes in ",(0,r.kt)("inlineCode",{parentName:"p"},"./host.ini")," using image ",(0,r.kt)("inlineCode",{parentName:"p"},"superbench/cuda:11.1"),"\nand default benchmarking configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb run --docker-image superbench/cuda:11.1 --host-file ./host.ini\n")),(0,r.kt)("h3",{id:"sb-version"},(0,r.kt)("inlineCode",{parentName:"h3"},"sb version")),(0,r.kt)("p",null,"Print the current SuperBench CLI version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb version\n")),(0,r.kt)("h4",{id:"global-arguments-7"},"Global arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--help")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Show help message.")))),(0,r.kt)("h4",{id:"examples-7"},"Examples"),(0,r.kt)("p",null,"Print version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="SB CLI"',title:'"SB','CLI"':!0},"sb version\n")))}s.isMDXComponent=!0}}]);