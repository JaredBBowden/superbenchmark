"use strict";(self.webpackChunksuperbench_website=self.webpackChunksuperbench_website||[]).push([[460],{3905:function(t,l,n){n.d(l,{Zo:function(){return a},kt:function(){return m}});var e=n(7294);function u(t,l,n){return l in t?Object.defineProperty(t,l,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[l]=n,t}function d(t,l){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);l&&(e=e.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),n.push.apply(n,e)}return n}function r(t){for(var l=1;l<arguments.length;l++){var n=null!=arguments[l]?arguments[l]:{};l%2?d(Object(n),!0).forEach((function(l){u(t,l,n[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(n,l))}))}return t}function k(t,l){if(null==t)return{};var n,e,u=function(t,l){if(null==t)return{};var n,e,u={},d=Object.keys(t);for(e=0;e<d.length;e++)n=d[e],l.indexOf(n)>=0||(u[n]=t[n]);return u}(t,l);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(t);for(e=0;e<d.length;e++)n=d[e],l.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(u[n]=t[n])}return u}var i=e.createContext({}),o=function(t){var l=e.useContext(i),n=l;return t&&(n="function"==typeof t?t(l):r(r({},l),t)),n},a=function(t){var l=o(t.components);return e.createElement(i.Provider,{value:l},t.children)},c={inlineCode:"code",wrapper:function(t){var l=t.children;return e.createElement(e.Fragment,{},l)}},s=e.forwardRef((function(t,l){var n=t.components,u=t.mdxType,d=t.originalType,i=t.parentName,a=k(t,["components","mdxType","originalType","parentName"]),s=o(n),m=u,p=s["".concat(i,".").concat(m)]||s[m]||c[m]||d;return n?e.createElement(p,r(r({ref:l},a),{},{components:n})):e.createElement(p,r({ref:l},a))}));function m(t,l){var n=arguments,u=l&&l.mdxType;if("string"==typeof t||u){var d=n.length,r=new Array(d);r[0]=s;var k={};for(var i in l)hasOwnProperty.call(l,i)&&(k[i]=l[i]);k.originalType=t,k.mdxType="string"==typeof t?t:u,r[1]=k;for(var o=2;o<d;o++)r[o]=n[o];return e.createElement.apply(null,r)}return e.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9818:function(t,l,n){n.r(l),n.d(l,{contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return k},metadata:function(){return o},toc:function(){return a}});var e=n(7462),u=n(3366),d=(n(7294),n(3905)),r=["components"],k={id:"system-config"},i="System Config Info",o={unversionedId:"user-tutorial/system-config",id:"user-tutorial/system-config",isDocsHomePage:!1,title:"System Config Info",description:"- System",source:"@site/../docs/user-tutorial/system-config.md",sourceDirName:"user-tutorial",slug:"/user-tutorial/system-config",permalink:"/superbenchmark/docs/user-tutorial/system-config",editUrl:"https://github.com/microsoft/superbenchmark/edit/main/website/../docs/user-tutorial/system-config.md",version:"current",frontMatter:{id:"system-config"},sidebar:"docs",previous:{title:"Docker Benchmarks",permalink:"/superbenchmark/docs/user-tutorial/benchmarks/docker-benchmarks"},next:{title:"Data Diagnosis",permalink:"/superbenchmark/docs/user-tutorial/data-diagnosis"}},a=[{value:"Parameter amd Details",id:"parameter-amd-details",children:[{value:"System",id:"system",children:[]},{value:"Memory",id:"memory",children:[]},{value:"CPU",id:"cpu",children:[]},{value:"Disk",id:"disk",children:[]},{value:"Networking",id:"networking",children:[]},{value:"Accelerator",id:"accelerator",children:[]},{value:"PCIe",id:"pcie",children:[]}]}],c={toc:a};function s(t){var l=t.components,n=(0,u.Z)(t,r);return(0,d.kt)("wrapper",(0,e.Z)({},c,n,{components:l,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"system-config-info"},"System Config Info"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#system"},"System")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#memory"},"Memory")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#cpu"},"CPU")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#disk"},"Disk")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#networking"},"Networking")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#accelerator"},"Accelerator")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("a",{parentName:"li",href:"#pcie"},"PCIe"))),(0,d.kt)("h2",{id:"parameter-amd-details"},"Parameter amd Details"),(0,d.kt)("h3",{id:"system"},"System"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"4"},(0,d.kt)("b",null,"OS")),(0,d.kt)("td",null,"system-manufacturer"),(0,d.kt)("td",null,"dmidecode -s system-manufacturer"),(0,d.kt)("td",null,"manufacturer of the system"),(0,d.kt)("td",null,"Microsoft Corporation")),(0,d.kt)("td",null,"system-product name(virtual machine)"),(0,d.kt)("td",null,"dmidecode -s system-product-name"),(0,d.kt)("td",null,"product name or virtual machine"),(0,d.kt)("td",null,"Virtual Machine"),(0,d.kt)("tr",null,(0,d.kt)("td",null,"operating_system"),(0,d.kt)("td",null,"cat /proc/version"),(0,d.kt)("td",null,"version of current running os"),(0,d.kt)("td",null,"Ubuntu 9.3.0-17ubuntu1~20.04")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"uname"),(0,d.kt)("td",null,"uname"),(0,d.kt)("td",null,"short for system information"),(0,d.kt)("td",null,"Linux sb-test-wu-000000 5.8.0-1039-azure #42~20.04.1-Ubuntu")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"2"},(0,d.kt)("b",null,"Docker")),(0,d.kt)("td",null,"docker_server_version"),(0,d.kt)("td",null,"docker version"),(0,d.kt)("td",null,"server version of docker engine"),(0,d.kt)("td",null,"20.10.3")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"docker_client_version"),(0,d.kt)("td",null,"docker version"),(0,d.kt)("td",null,"client version of docker engine"),(0,d.kt)("td",null,"20.10.3")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center"},(0,d.kt)("b",null,"VM")),(0,d.kt)("td",null,"vmbus"),(0,d.kt)("td",null,"lsvmbus"),(0,d.kt)("td",null,"devices attached to the Hyper-V VMBus"),(0,d.kt)("td",null,'"VMBUS ID  1": "[Dynamic Memory]",',(0,d.kt)("br",null),'"VMBUS ID  2": "Synthetic mouse",',(0,d.kt)("br",null),"...")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"2"},(0,d.kt)("b",null,"Kernel")),(0,d.kt)("td",null,"kernel_modules"),(0,d.kt)("td",null,"sysctl"),(0,d.kt)("td",null,"list of active kernel modules"),(0,d.kt)("td",null,'"abi.vsyscall32": "1",',(0,d.kt)("br",null),'"debug.exception-trace": "1",',(0,d.kt)("br",null),"...")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"kernel_parameters"),(0,d.kt)("td",null,"lsmod"),(0,d.kt)("td",null,"kernel parameters"),(0,d.kt)("td",null,'"Module": "binfmt_misc",',(0,d.kt)("br",null),'"Size": "24576",',(0,d.kt)("br",null),'"Used": "1"',(0,d.kt)("br",null),"...")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center"},(0,d.kt)("b",null,"DMI")),(0,d.kt)("td",null,"dmidecode"),(0,d.kt)("td",null,"dmidecode"),(0,d.kt)("td",null,"DMI table dump (info on hardware components)"),(0,d.kt)("td",null,'"dmidecode": "# dmidecode 3.2\\nGetting SMBIOS data from sysfs..."')))),(0,d.kt)("h3",{id:"memory"},"Memory"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"6"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"model"),(0,d.kt)("td",null,"dmidecode\xa0-t\xa0memory"),(0,d.kt)("td",null,"distinct model name of the memory"),(0,d.kt)("td",null,"Samsung M393A4K40DB3-CWE")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"type"),(0,d.kt)("td",null,"dmidecode\xa0-t\xa0memory"),(0,d.kt)("td",null,"distinct type of memory"),(0,d.kt)("td",null,"DDR4-3200")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"clock frequency"),(0,d.kt)("td",null,"dmidecode\xa0-t\xa0memory"),(0,d.kt)("td",null,"distinct clock frequency of memory"),(0,d.kt)("td",null,"3200 MT/s")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"channels"),(0,d.kt)("td",null,"dmidecode\xa0-t\xa0memory"),(0,d.kt)("td",null,"the number of memory chips"),(0,d.kt)("td",null,"16")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"capacity"),(0,d.kt)("td",null,"lsmem"),(0,d.kt)("td",null,"the total capacity of memory"),(0,d.kt)("td",null,"511.9G")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"block_size"),(0,d.kt)("td",null,"lsmem"),(0,d.kt)("td",null,"the block size of memory"),(0,d.kt)("td",null,"128M")))),(0,d.kt)("h3",{id:"cpu"},"CPU"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"16"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"archeticture"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"architecture of cpu"),(0,d.kt)("td",null,"x86_64")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"model name"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"model name of cpu"),(0,d.kt)("td",null,"AMD EPYC 7662 64-Core Processor")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"cpu op-mode"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"cpu mode: 32bit/64bit"),(0,d.kt)("td",null,"32-bit, 64-bit")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"byte order"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"byte order"),(0,d.kt)("td",null,"Little Endian")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"address size"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"size of address"),(0,d.kt)("td",null,"48 bits physical, 48 bits virtual")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"cpus"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"logical cpu cores count"),(0,d.kt)("td",null,"256")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"On-line CPU(s) list"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"on-line logical cpu cores"),(0,d.kt)("td",null,"0-255")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"Thread(s) per core"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"thread per core"),(0,d.kt)("td",null,"2")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"Core(s) per socket"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"core per socket"),(0,d.kt)("td",null,"64")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"Socket(s)"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"socket count"),(0,d.kt)("td",null,"2")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"NUMA node(s)"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"numa node count"),(0,d.kt)("td",null,"4")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"L&ltx&gt caches"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"cache size"),(0,d.kt)("td",null,'"L1d cache": "4 MiB", "L1i cache": "4 MiB", "L2 cache": "64 MiB", "L3 cache": "512 MiB"')),(0,d.kt)("tr",null,(0,d.kt)("td",null,"NUMA node&ltx&gt CPU(s)"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"cpu core list of the numa node"),(0,d.kt)("td",null,'"NUMA node0 CPU(s)": "0-31,128-159", "NUMA node1 CPU(s)": "32-63,160-191", "NUMA node2 CPU(s)": "64-95,192-223", "NUMA node3 CPU(s)": "96-127,224-255"')),(0,d.kt)("tr",null,(0,d.kt)("td",null,"Flags"),(0,d.kt)("td",null,"lscpu"),(0,d.kt)("td",null,"cpu flags"),(0,d.kt)("td",null," fpu vme de pse tsc msr pae mce cx8 apic ...")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"max_speed"),(0,d.kt)("td",null,'sudo dmidecode -t processor | grep "Speed"'),(0,d.kt)("td",null,"distinct cpu max frequency"),(0,d.kt)("td",null,"3700 MHz")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"current_speed"),(0,d.kt)("td",null,'sudo dmidecode -t processor | grep "Speed"'),(0,d.kt)("td",null,"distinct cpu current frequency"),(0,d.kt)("td",null,"2000 MHz")))),(0,d.kt)("h3",{id:"disk"},"Disk"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"6"},(0,d.kt)("b",null,"FileSystem")),(0,d.kt)("td",null,"filesystem"),(0,d.kt)("td",null,"df\xa0-Th"),(0,d.kt)("td",null,"the name/path of the filesystem"),(0,d.kt)("td",null,"/dev/nvme0n1p2")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"avail"),(0,d.kt)("td",null,"df\xa0-Th"),(0,d.kt)("td",null,"avail size of the filesystem"),(0,d.kt)("td",null,"1.4T")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"size"),(0,d.kt)("td",null,"df\xa0-Th"),(0,d.kt)("td",null,"total size of the filesystem"),(0,d.kt)("td",null,"1.8T")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"type"),(0,d.kt)("td",null,"df\xa0-Th"),(0,d.kt)("td",null,"the type of the filesystem"),(0,d.kt)("td",null,"ext4")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"block_size"),(0,d.kt)("td",null,"blockdev --getbsz /dev/&ltdevice&gt"),(0,d.kt)("td",null,"the block size of the filesytem"),(0,d.kt)("td",null,"4096")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"4k_alignment"),(0,d.kt)("td",null,"4kDEVICE=/dev/sdb1 do parted $DEVICE align-check opt 1; done_alignment"),(0,d.kt)("td",null,"whether the file system is 4k alignment"),(0,d.kt)("td",null,"1 aligned")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"5"},(0,d.kt)("b",null,"BlockDevice")),(0,d.kt)("td",null,"name"),(0,d.kt)("td",null,"lsblk\xa0-e\xa07\xa0-o\xa0NAME,ROTA,SIZE,MODEL\xa0"),(0,d.kt)("td",null,"the name of the block device"),(0,d.kt)("td",null,"nvme0n1")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"model"),(0,d.kt)("td",null,"lsblk\xa0-e\xa07\xa0-o\xa0NAME,ROTA,SIZE,MODEL\xa0"),(0,d.kt)("td",null,"the model name of the block device"),(0,d.kt)("td",null,"VO001920KXAVP")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"rotational"),(0,d.kt)("td",null,"lsblk\xa0-e\xa07\xa0-o\xa0NAME,ROTA,SIZE,MODEL\xa0"),(0,d.kt)("td",null,"whether rotational, thai is HDD or SSD"),(0,d.kt)("td",null,"0")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"size"),(0,d.kt)("td",null,"lsblk\xa0-e\xa07\xa0-o\xa0NAME,ROTA,SIZE,MODEL\xa0"),(0,d.kt)("td",null,"the total size of the block device"),(0,d.kt)("td",null,"1.8T")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"block_size"),(0,d.kt)("td",null,"fdisk\xa0-l\xa0-u\xa0/dev/",'\xa0|\xa0grep\xa0"Sector\xa0size"'),(0,d.kt)("td",null,"the sector size of the block device"),(0,d.kt)("td",null,"Sector size (logical/physical): 512 bytes / 512 bytes")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"mapping"),(0,d.kt)("td",null,"mount"),(0,d.kt)("td",null,"mount relationship between filesystem and block device"),(0,d.kt)("td",null)))),(0,d.kt)("h3",{id:"networking"},"Networking"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"6"},(0,d.kt)("b",null,"NIC")),(0,d.kt)("td",null,"nic_logical_name"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"logical name of the nic"),(0,d.kt)("td",null,"ib1")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nic_model"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"model name of the nic"),(0,d.kt)("td",null,"Mellanox Technologies MT28908 Family [ConnectX-6]")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nic_firmware"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"fw version"),(0,d.kt)("td",null,"20.30.1004 (MT_0000000594)")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nic_driver"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"driver version"),(0,d.kt)("td",null,"mlx5_core[ib_ipoib] 5.3-1.0.0")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nic_speed"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"speed spec of the nic"),(0,d.kt)("td",null,"200 Gbit/s")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nic_disabled"),(0,d.kt)("td",null,"lshw -c network"),(0,d.kt)("td",null,"whether diabled"),(0,d.kt)("td",null,"false")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"2"},(0,d.kt)("b",null,"IB")),(0,d.kt)("td",null,"device_info"),(0,d.kt)("td",null,"ibv_devinfo -v"),(0,d.kt)("td",null,"list of device information for each ib device"),(0,d.kt)("td",null,'"hca_id:\\tmlx5_0": ...')),(0,d.kt)("tr",null,(0,d.kt)("td",null,"device_status"),(0,d.kt)("td",null,"ibstat"),(0,d.kt)("td",null,"list of device status for each ib device"),(0,d.kt)("td",null,"\"CA 'mlx5_0'\": ...")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"ofed_version"),(0,d.kt)("td",null,"ofed_info\xa0\xa0-s"),(0,d.kt)("td",null,"the version of ofed"),(0,d.kt)("td",null,"MLNX_OFED_LINUX-5.3-1.0.5.0:")))),(0,d.kt)("h3",{id:"accelerator"},"Accelerator"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example(NVIDIA)")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example(AMD)"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"5"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"driver_version"),(0,d.kt)("td",null,"nvidia-smi -q -x/rocm-smi -a"),(0,d.kt)("td",null,"driver version"),(0,d.kt)("td",null,"460.27.04"),(0,d.kt)("td",null,"5.9.25")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"topology"),(0,d.kt)("td",null,"nvidia-smi topo -m/rocm-smi --showtopo"),(0,d.kt)("td",null,"gpu connection topology (nvidia only)"),(0,d.kt)("td",null,"/"),(0,d.kt)("td",null,"/")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nvidia-container-runtime_version"),(0,d.kt)("td",null,"nvidia-container-runtime -v"),(0,d.kt)("td",null,"version of nvidia-container-runtime (nvidia only)"),(0,d.kt)("td",null,"1.0.0-rc92"),(0,d.kt)("td",null,"N/A")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nvidia-fabricmanager_version"),(0,d.kt)("td",null,"nv-fabricmanager --version"),(0,d.kt)("td",null,"version of nvidia-fabricmanager (nvidia only)"),(0,d.kt)("td",null,"460.27.04"),(0,d.kt)("td",null,"N/A")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nv_peer_mem_version"),(0,d.kt)("td",null,"dpkg -l | grep 'nvidia-peer-memory'"),(0,d.kt)("td",null,"version of nv_peer_mem (nvidia only)"),(0,d.kt)("td",null,"1.1-0"),(0,d.kt)("td",null,"N/A")),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"2"},(0,d.kt)("b",null,"GPUCard")),(0,d.kt)("td",null,"rocm_info"),(0,d.kt)("td",null,"rocm-smi -a & rocm-smi --showmeminfo vram"),(0,d.kt)("td",null,"amd gpu info of each gpu&lsindex&gt, including firmware, frequency, memory, etc. (amd only)"),(0,d.kt)("td",null,"N/A"),(0,d.kt)("td",null,'"card0": ...',(0,d.kt)("br",null),'"card1": ...')),(0,d.kt)("tr",null,(0,d.kt)("td",null,"nvidia_info"),(0,d.kt)("td",null,"nvidia-smi -q"),(0,d.kt)("td",null,"nvidia gpu info list of each gpu, including firmware, frequency, memory, etc. (nvidia only)"),(0,d.kt)("td",null,'"timestamp": "Fri Aug 20 05:36:24 2021",',(0,d.kt)("br",null),'"driver_version": "460.27.04",',(0,d.kt)("br",null),'"cuda_version": "11.2",',(0,d.kt)("br",null),'"attached_gpus": "8",',(0,d.kt)("br",null),'"gpu": [...]',(0,d.kt)("br",null),"...",(0,d.kt)("br",null)),(0,d.kt)("td",null,"N/A")))),(0,d.kt)("h3",{id:"pcie"},"PCIe"),(0,d.kt)("table",null,(0,d.kt)("tbody",null,(0,d.kt)("tr",{align:"centor",valign:"bottom"},(0,d.kt)("td",null,(0,d.kt)("b",null,"SubCategory")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Key")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Command")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Description")),(0,d.kt)("td",null,(0,d.kt)("b",null,"Example"))),(0,d.kt)("tr",null,(0,d.kt)("td",{align:"center",valign:"middle",rowspan:"2"},(0,d.kt)("b",null,"General")),(0,d.kt)("td",null,"topology"),(0,d.kt)("td",null,"lspci -t -vvv"),(0,d.kt)("td",null,"topology of installed PCI devices"),(0,d.kt)("td",null,"/")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"device_info"),(0,d.kt)("td",null,"lspci -vvv"),(0,d.kt)("td",null,"device info on installed PCI devices"),(0,d.kt)("td",null,"00:00.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Starship/Matisse Root Complex...")))))}s.isMDXComponent=!0}}]);